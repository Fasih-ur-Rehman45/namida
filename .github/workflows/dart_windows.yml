# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Dart Windows

on:
  workflow_dispatch:

jobs:

  build_windows:
    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v4
        with:
          token: ${{ secrets.PAT }}
          submodules: recursive

      - uses: subosito/flutter-action@v2
        with:
          flutter-version-file: pubspec.yaml

      - uses: dart-lang/setup-dart@v1
        with:
          sdk: "3.6.0"

      - name: setup credentials 
        run: |
          git config --global url.https://${{ secrets.PAT_ORG }}@github.com/namidaco/.insteadOf https://github.com/namidaco/
          git config --global url.https://${{ secrets.PAT }}@github.com/MSOB7YY/.insteadOf https://github.com/MSOB7YY/

      - name: Git Submodule Update
        run: |
          git clone https://github.com/namidaco/namida-translations/ assets/language

      - name: Setup dependencies
        run: |
          flutter clean
          flutter pub get
          flutter pub upgrade

      - name: Extract version from pubspec.yaml
        id: extract_version
        run: |
          $VERSION=(Select-String 'version:' pubspec.yaml | ForEach-Object { ($_ -split ' ')[1] })
          echo ::set-output name=version::"$VERSION"

      - name: Build Windows App
        run: |
          flutter config --enable-windows-desktop
          flutter build windows

      - name: Build iss script
        run: dart run inno_bundle:build --no-app --release --no-installer

      - name: Output config into github output
        id: envs
        run: echo $(dart run inno_bundle:build --envs --no-hf) | Out-File -FilePath $Env:GITHUB_OUTPUT -Encoding utf8 -Append

      - name: Build installer
        uses: Minionguyjpro/Inno-Setup-Action@v1.2.2
        with:
          path: ./build/windows/x64/installer/Release/inno-script.iss
          
      - name: Creating windows inno installer
        shell: pwsh
        run: |
          New-Item -ItemType Directory -Force -Path build_final
          Move-Item -Force "./build/windows/x64/installer/Release/${{ steps.envs.outputs.APP_NAME_CAMEL_CASE }}-x86_64-${{ steps.envs.outputs.APP_VERSION }}-Installer.exe" "build_final/${{ steps.envs.outputs.APP_NAME_CAMEL_CASE }}-x86_64-${{ steps.envs.outputs.APP_VERSION }}-Installer.exe"

      - name: Upload to latest release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          response=$(curl -s https://api.github.com/repos/namidaco/namida-snapshots/releases/latest)
          TAG=$(echo "$response" | jq -r .tag_name)
          gh release upload "$TAG" build_final/* --repo "namidaco/namida-snapshots"


